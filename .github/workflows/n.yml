name: Convert TensorFlow Model to Core ML and Create PR

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main

jobs:
  convert-and-pr:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8' # TensorFlow 1.x is compatible with Python 3.8

      # Install dependencies (TensorFlow 1.x and coremltools)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==1.15.0
          pip install coremltools==7.0

      # Convert TensorFlow model to Core ML
      - name: Convert model to .mlmodel
        run: |
          python -c "
import coremltools as ct
import tensorflow as tf

# Load the TensorFlow SavedModel
model = tf.saved_model.load('Test')

# Convert to Core ML model
# Note: You may need to specify input/output names if the model requires it
mlmodel = ct.convert(model)

# Save the Core ML model
mlmodel.save('Test/model.mlmodel')
"

      # Configure git
      - name: Setup git config
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      # Create branch, commit changes, and push
      - name: Create branch and commit
        run: |
          git checkout -b feature/convert-to-mlmodel-$(date +%Y%m%d-%H%M%S)
          git add Test/model.mlmodel
          git commit -m "Convert TensorFlow model to Core ML format" || echo "No changes to commit"
          git push origin HEAD

      # Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: feature/convert-to-mlmodel-$(date +%Y%m%d-%H%M%S)
          title: "Convert TensorFlow model to Core ML format"
          body: |
            This PR converts the TensorFlow model in the Test directory to Core ML format (.mlmodel).
            Automatically generated by GitHub Actions workflow.
          commit-message: "Add converted Core ML model (model.mlmodel)"