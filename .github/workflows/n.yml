name: Convert TensorFlow Model to Core ML and Create PR

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main

jobs:
  convert-and-pr:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8' # TensorFlow 1.x is compatible with Python 3.8

      # Install dependencies (TensorFlow 1.x and coremltools)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==1.15.0
          pip install coremltools==4.1 # Older version for better TF 1.x compatibility

      # Create a Python script for conversion
      - name: Create conversion script
        run: |
          cat << 'EOF' > convert_model.py
          import coremltools as ct
          import tensorflow as tf
          import os

          # Ensure the Test directory exists
          if not os.path.exists('Test'):
              raise FileNotFoundError("Test directory not found")

          # Load the TensorFlow SavedModel
          try:
              with tf.Session(graph=tf.Graph()) as sess:
                  model = tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], 'Test')
                  print("TensorFlow model loaded successfully")
          except Exception as e:
              print(f"Error loading TensorFlow model: {e}")
              exit(1)

          # Convert to Core ML model
          try:
              # Basic conversion; adjust inputs/outputs if needed
              mlmodel = ct.converters.tensorflow.convert(
                  'Test',
                  inputs={'input': [1, 224, 224, 3]}  # Example input shape; adjust as needed
              )
              print("Model converted to Core ML successfully")
          except Exception as e:
              print(f"Error converting to Core ML: {e}")
              exit(1)

          # Save the Core ML model
          try:
              mlmodel.save('Test/model.mlmodel')
              print("Core ML model saved as Test/model.mlmodel")
          except Exception as e:
              print(f"Error saving Core ML model: {e}")
              exit(1)
          EOF

      # Run the conversion script
      - name: Run conversion script
        run: |
          python convert_model.py

      # Configure git
      - name: Setup git config
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      # Create branch, commit changes, and push
      - name: Create branch and commit
        run: |
          git checkout -b feature/convert-to-mlmodel-$(date +%Y%m%d-%H%M%S)
          git add Test/model.mlmodel
          git commit -m "Convert TensorFlow model to Core ML format" || echo "No changes to commit"
          git push origin HEAD

      # Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: feature/convert-to-mlmodel-$(date +%Y%m%d-%H%M%S)
          title: "Convert TensorFlow model to Core ML format"
          body: |
            This PR converts the TensorFlow model in the Test directory to Core ML format (.mlmodel).
            Automatically generated by GitHub Actions workflow.
          commit-message: "Add converted Core ML model (model.mlmodel)"