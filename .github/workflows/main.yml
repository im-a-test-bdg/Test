name: Download, Extract, and Convert MobileBERT to Core ML Release

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  convert-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Use a version compatible with coremltools

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==2.12.0 coremltools==7.0
        env:
          CUDA_VISIBLE_DEVICES: -1 # Disable GPU to avoid CUDA factory errors

      # Step 4: Download the .tar.gz file from Dropbox
      - name: Download MobileBERT .tar.gz
        run: |
          curl -L "https://www.dropbox.com/scl/fi/hjeimijvefkw5yga60fam/mobilebert-tensorflow1-uncased-l-24-h-128-b-512-a-4-f-4-opt-v1.tar.gz?rlkey=tz9l4x95bx3qzfosq514c5mg5&st=v5vbzd1t&dl=1" -o mobilebert.tar.gz
          ls -la  # Verify the file was downloaded

      # Step 5: Extract the .tar.gz file
      - name: Extract MobileBERT
        run: |
          tar -xzf mobilebert.tar.gz
          ls -la  # List files to debug what was extracted
          # The saved_model.pb is in the current directory after extraction
          echo "Extracted model path: $(pwd)" > model_path.txt
          cat model_path.txt  # Debug: Show the model path

      # Step 6: Convert the model to Core ML
      - name: Convert to .mlmodel
        run: |
          # Use sed to extract the full path after "Extracted model path:"
          MODEL_PATH=$(sed -n 's/Extracted model path: //p' model_path.txt)
          echo "Using MODEL_PATH: $MODEL_PATH"  # Debug: Confirm the path
          python convert_to_coreml.py "$MODEL_PATH"

      # Step 7: Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: MobileBERT Core ML Model v${{ github.run_number }}
          draft: false
          prerelease: false
          body: |
            Automated release of MobileBERT model converted from Dropbox .tar.gz to Core ML format (.mlmodel).

      # Step 8: Upload the .mlmodel as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mobilebert.mlmodel
          asset_name: mobilebert.mlmodel
          asset_content_type: application/octet-stream