name: Download and Convert MobileBERT to Core ML Release

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  convert-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Use a version compatible with coremltools

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kagglehub coremltools tensorflow

      # Step 4: Download the MobileBERT model from KaggleHub
      - name: Download MobileBERT model
        run: |
          python -c "import kagglehub; path = kagglehub.model_download('google/mobilebert/TensorFlow1/uncased-l-24-h-128-b-512-a-4-f-4-opt/1'); print(f'Model downloaded to: {path}')" > model_path.txt
          cat model_path.txt

      # Step 5: Convert the model to Core ML
      - name: Convert to .mlmodel
        run: |
          MODEL_PATH=$(cat model_path.txt | grep "Model downloaded to:" | cut -d' ' -f3)
          python convert_to_coreml.py "$MODEL_PATH"

      # Step 6: Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by GitHub
        with:
          tag_name: v${{ github.run_number }} # Creates a unique tag like v1, v2, etc.
          release_name: MobileBERT Core ML Model v${{ github.run_number }}
          draft: false
          prerelease: false
          body: |
            Automated release of MobileBERT model converted to Core ML format (.mlmodel).

      # Step 7: Upload the .mlmodel as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # From create_release step
          asset_path: ./mobilebert.mlmodel
          asset_name: mobilebert.mlmodel
          asset_content_type: application/octet-stream